name: "master-backend"

services:
  traefik:
    container_name: traefik
    image: traefik:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "5432:5432"
      - "8080:8080"
    environment:
      NETLIFY_TOKEN: ${NETLIFY_TOKEN}
    labels:
      - "traefic.http.routers.traefik.rule=Host(`traefik.helios.michkoff.com`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"
      - "traefic.http.routers.traefik.service=api@internal"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./traefik/dynamic_conf.yml:/etc/traefik/dynamic_conf.yml

  master-backend:
    container_name: master-backend
    image: ghcr.io/heliosshieldproject/master-backend-rust:latest
    restart: always
    ports: ["${MASTER_BACKEND_PORT}"]
    depends_on:
      - database
    environment:
      - MASTER_BACKEND_URL=${MASTER_BACKEND_URL}
      - DATABASE_URL=${DATABASE_URL}
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - RUST_ENV=${RUST_ENV}
      - LOGGER_URL=${LOGGER_URL}
    labels:
      - "traefik.http.routers.master-backend.rule=Host(`api.helios.michkoff.com`)"
      - "traefik.http.routers.master-backend.entrypoints=websecure"
      - "traefik.http.routers.master-backend.tls.certresolver=myresolver"
      - "traefik.http.routers.master-backend.tls.domains[0].main=api.helios.michkoff.com"
      - "traefik.http.routers.master-backend.tls.domains[0].sans=www.api.helios.michkoff.com"

  database:
    container_name: database
    image: postgres:12
    restart: always
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports: ["${DATABASE_PORT}"]
    command: -p ${DATABASE_PORT}
    volumes:
      - database-volume:/var/lib/postgresql/data
    labels:
      - "traefik.tcp.routers.database.rule=HostSNI(`database.helios.michkoff.com`)"
      - "traefik.tcp.routers.database.entrypoints=tcp"
      - "traefic.tcp.routers.postgres.tls=true"
      - "traefik.tcp.routers.database.tls.certresolver=myresolver"
      - "traefik.tcp.services.database.loadbalancer.server.port=${DATABASE_PORT}"

  logger:
    container_name: logger
    image: ghcr.io/heliosshieldproject/logger-rust:latest
    restart: always
    environment:
      - MONGO_URL=${MONGO_URL}
      - LOGGER_URI=${LOGGER_URI}
    ports: ["${LOGGER_PORT}"]
    labels:
      - "traefik.http.routers.logger.rule=Host(`logger.helios.michkoff.com`)"
      - "traefik.http.routers.logger.entrypoints=websecure"
      - "traefik.http.routers.logger.tls.certresolver=myresolver"
      - "traefik.http.routers.logger.tls.domains[0].main=logger.helios.michkoff.com"
      - "traefik.http.routers.logger.tls.domains[0].sans=www.logger.helios.michkoff.com"

  logs-database:
    container_name: logs-database
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${LOGS_DATABASE_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${LOGS_DATABASE_PASSWORD}
    volumes:
      - logs-database-volume:/data/db
    command:
      - --port
      - ${LOGS_DATABASE_PORT}
    ports: ["${LOGS_DATABASE_PORT}"]

  logs-viewer:
    container_name: logs-viewer
    image: mongo-express
    restart: always
    ports: [8081]
    environment:
      ME_CONFIG_MONGODB_URL: ${MONGO_URL}
      ME_CONFIG_OPTIONS_EDITORTHEME: nord
      ME_CONFIG_BASICAUTH_USERNAME: ${LOGS_VIEWER_USER}
      ME_CONFIG_BASICAUTH_PASSWORD: ${LOGS_VIEWER_PASSWORD}
    depends_on:
      - logs-database
    labels:
      - "traefik.http.routers.logs-viewer.rule=Host(`logs.helios.michkoff.com`)"
      - "traefik.http.routers.logs-viewer.entrypoints=websecure"
      - "traefik.http.routers.logs-viewer.tls.certresolver=myresolver"
      - "traefik.http.routers.logs-viewer.tls.domains[0].main=logs.helios.michkoff.com"
      - "traefik.http.routers.logs-viewer.tls.domains[0].sans=www.logs.helios.michkoff.com"

volumes:
  database-volume:
  logs-database-volume:
