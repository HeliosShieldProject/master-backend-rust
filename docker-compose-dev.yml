name: "master-backend"

services:
  traefik:
    container_name: traefik
    image: traefik:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "5432:5432"
    environment:
      DO_AUTH_TOKEN: ${DO_AUTH_TOKEN}
    labels:
      - "traefik.http.routers.traefik.rule=Host(`traefik.${HELIOS_DOMAIN}`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_AUTH}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./compose/traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./compose/traefik/dynamic_conf.yml:/etc/traefik/dynamic_conf.yml
    logging:
      driver: "loki"
      options:
        loki-url: "http://host.docker.internal:3100/loki/api/v1/push"

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./compose/prometheus/:/etc/prometheus/
      - prometheus-volume:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
    labels:
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.${HELIOS_DOMAIN}`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=myresolver"

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: always
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - ./compose/grafana/provisioning/:/etc/grafana/provisioning/
      - grafana-volume:/var/lib/grafana
    labels:
      - "traefik.http.routers.grafana.rule=Host(`grafana.${HELIOS_DOMAIN}`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"
    logging:
      driver: "loki"
      options:
        loki-url: "http://host.docker.internal:3100/loki/api/v1/push"

  loki:
    container_name: loki
    image: grafana/loki:latest
    restart: always
    ports:
      - "3100:3100"
    volumes:
      - ./compose/loki/loki-config.yaml:/etc/loki/loki-config.yaml
      - loki-volume:/data/loki
    command: -config.file=/etc/loki/loki-config.yaml
    labels:
      - "traefik.http.routers.loki.rule=Host(`loki.${HELIOS_DOMAIN}`)"
      - "traefik.http.routers.loki.entrypoints=websecure"
      - "traefik.http.routers.loki.tls.certresolver=myresolver"

  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    restart: always
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./compose/promtail/promtail-config.yaml:/etc/promtail/promtail-config.yaml
    command: -config.file=/etc/promtail/promtail-config.yaml
    labels:
      - "traefik.http.routers.promtail.rule=Host(`promtail.${HELIOS_DOMAIN}`)"
      - "traefik.http.routers.promtail.entrypoints=websecure"
      - "traefik.http.routers.promtail.tls.certresolver=myresolver"

  master-backend:
    container_name: master-backend
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "${MASTER_BACKEND_PORT}:${MASTER_BACKEND_PORT}"
    depends_on:
      - database
    environment:
      - MASTER_BACKEND_URL=${MASTER_BACKEND_URL}
      - DATABASE_URL=${DATABASE_URL}
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - RUST_ENV=${RUST_ENV}
      - LOGGER_URL=${LOGGER_URL}
    labels:
      - "traefik.http.routers.master-backend.rule=Host(`api.${HELIOS_DOMAIN}`)"
      - "traefik.http.routers.master-backend.entrypoints=websecure"
      - "traefik.http.routers.master-backend.tls.certresolver=myresolver"
    logging:
      driver: "loki"
      options:
        loki-url: "http://host.docker.internal:3100/loki/api/v1/push"

  database:
    container_name: database
    image: postgres:12
    restart: always
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    command: -p ${DATABASE_PORT}
    volumes:
      - database-volume:/var/lib/postgresql/data
    labels:
      - "traefik.tcp.routers.database.rule=HostSNI(`database.${HELIOS_DOMAIN}`)"
      - "traefik.tcp.routers.database.entrypoints=tcp"
      - "traefik.tcp.routers.database.tls.certresolver=myresolver"
      - "traefik.tcp.services.database.loadbalancer.server.port=${DATABASE_PORT}"
    logging:
      driver: "loki"
      options:
        loki-url: "http://host.docker.internal:3100/loki/api/v1/push"

volumes:
  database-volume:
  prometheus-volume:
  grafana-volume:
  loki-volume:
